//Acuerdo de pareja://

+Responsabilidades Jarek:

 -Implementar la lista enlazada dinámica
 -Agregar mascota a la cola
 -Atender mascota
 -Mostrar cola en GUI
 -Controlar que no se repita el registro de una mascota
 -Diseñar la interfaz gráfica relacionada con la cola:
 -Mostrar quién está en la cola
 -Mostrar quién está siendo atendido

+Responsabilidades David:
 -Implementar el ABB
 -Insertar mascota nueva
 -Buscar mascota por nombre o ID
 -Eliminar mascota del registro
 -Recorrer el árbol en orden
 -Mostrar historial ordenado en GUI
 -Interfaz relacionada con el árbol:
 -Consultar historial de mascotas
 -Buscar o eliminar mascotas


//Decisiones de diseño://

-Se definió que el árbol estaría ordenado por ID para evitar errores con nombres repetidos y permitir búsquedas mas realistas.

-Se implementó una única interfaz principal (ClinicaGUI) desde donde se pueden registrar mascotas, atenderlas y ver el historial.

-El historial se rediseñó como un JPanel independiente (HistorialMascotasPanel) para facilitar su integración desde la ventana principal mediante un JDialog.

-La interfaz evita el uso de múltiples ventanas flotantes, priorizando la experiencia del usuario.


//Decisiones de implementación://

-Se utilizaron estructuras dinámicas implementadas desde cero: una lista enlazada para la cola y un árbol binario de búsqueda para el historial.

-Se evitó el uso de System.out.println y entrada por consola, adaptando todos los mensajes al entorno gráfico mediante JOptionPane.

-Se implementó control de errores al registrar mascotas con ID duplicado usando excepciones y validación visual.

-Se garantizó que las mascotas insertadas se agregan tanto al árbol como a la cola, según corresponda.

-Se implementó persistencia de datos utilizando archivos de texto (.txt).

-Se incluyeron bloques `try-catch` en la carga y escritura de archivos, para evitar errores en tiempo de ejecución y garantizar una experiencia estable.


//Puntos de mejora://

-Agregar validación visual más completa, como control de campos vacíos o mal ingresados en el formulario de registro.

-Mejorar el diseño visual y la disposición de componentes en la interfaz para una experiencia de usuario más clara e intuitiva.




